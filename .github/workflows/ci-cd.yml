name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry & dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install
      - name: Test
        run: |
          poetry run pytest --reruns 10 --cov=opta --cov-report=xml
      - name: Upload coverage to Codecov
        if: ${{ github.event_name == 'push' }}
        run: curl -s https://codecov.io/bash | bash -s -- -c -F aFlag -f coverage.xml
  publish:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install poetry & dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --no-dev
      - name: Build package
        run: poetry build
      - name: Publish package to PyPi
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish
